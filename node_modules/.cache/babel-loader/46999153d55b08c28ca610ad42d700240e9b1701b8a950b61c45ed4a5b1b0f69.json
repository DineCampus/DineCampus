{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osheenconstable\\\\dine-campus\\\\src\\\\components\\\\UpdateStore.js\",\n  _s = $RefreshSig$();\n// src/components/UpdateStore.js\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateStore = () => {\n  _s();\n  const [stores, setStores] = useState([]);\n  const [selectedStoreId, setSelectedStoreId] = useState('');\n  const [name, setName] = useState('');\n  const [icon, setIcon] = useState('');\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const response = await axiosInstance.get('/stores');\n        setStores(response.data);\n      } catch (error) {\n        console.error('Error fetching stores:', error);\n      }\n    };\n    fetchStores();\n  }, []);\n  const handleUpdateStore = async e => {\n    e.preventDefault();\n    try {\n      await axiosInstance.put(`/stores/${selectedStoreId}`, {\n        name,\n        icon\n      });\n      alert('Store updated successfully');\n    } catch (error) {\n      console.error('Error updating store:', error);\n      alert('Failed to update store');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleUpdateStore,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedStoreId,\n      onChange: e => setSelectedStoreId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), stores.map(store => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: store.id,\n        children: store.name\n      }, store.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Store Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Icon URL\",\n      value: icon,\n      onChange: e => setIcon(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Store\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateStore, \"8p+IgN5aoKj03rTvBNd8tQzGqSI=\");\n_c = UpdateStore;\nexport default UpdateStore;\nvar _c;\n$RefreshReg$(_c, \"UpdateStore\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","UpdateStore","_s","stores","setStores","selectedStoreId","setSelectedStoreId","name","setName","icon","setIcon","fetchStores","response","get","data","error","console","handleUpdateStore","e","preventDefault","put","alert","onSubmit","children","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","store","id","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/osheenconstable/dine-campus/src/components/UpdateStore.js"],"sourcesContent":["// src/components/UpdateStore.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axiosInstance from '../api/axios';\r\n\r\nconst UpdateStore = () => {\r\n    const [stores, setStores] = useState([]);\r\n    const [selectedStoreId, setSelectedStoreId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [icon, setIcon] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchStores = async () => {\r\n            try {\r\n                const response = await axiosInstance.get('/stores');\r\n                setStores(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching stores:', error);\r\n            }\r\n        };\r\n        fetchStores();\r\n    }, []);\r\n\r\n    const handleUpdateStore = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axiosInstance.put(`/stores/${selectedStoreId}`, { name, icon });\r\n            alert('Store updated successfully');\r\n        } catch (error) {\r\n            console.error('Error updating store:', error);\r\n            alert('Failed to update store');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleUpdateStore}>\r\n            <select\r\n                value={selectedStoreId}\r\n                onChange={(e) => setSelectedStoreId(e.target.value)}\r\n            >\r\n                <option value=\"\">Select Store</option>\r\n                {stores.map(store => (\r\n                    <option key={store.id} value={store.id}>{store.name}</option>\r\n                ))}\r\n            </select>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Store Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Icon URL\"\r\n                value={icon}\r\n                onChange={(e) => setIcon(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Update Store</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UpdateStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}