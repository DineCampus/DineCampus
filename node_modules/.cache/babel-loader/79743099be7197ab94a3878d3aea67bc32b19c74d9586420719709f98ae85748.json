{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\osheenconstable\\\\dine-campus\\\\src\\\\components\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\n// src/components/RegisterForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './RegisterForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst preApprovedStaffIDs = ['12345', '67890', '11223']; // Example pre-approved staff IDs\n\nconst RegisterForm = () => {\n  _s();\n  const [idNumber, setIdNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('student'); // default role\n  const [error, setError] = useState('');\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    // Validate staff ID\n    if (role === 'staff' && !preApprovedStaffIDs.includes(idNumber)) {\n      setError('Invalid staff ID.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/auth/register', {\n        idNumber,\n        password,\n        role\n      });\n      alert('Registration successful');\n      setError('');\n    } catch (error) {\n      console.error('Registration failed:', error);\n      setError('Registration failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"ID Number\",\n      value: idNumber,\n      onChange: e => setIdNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: role,\n      onChange: e => setRole(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"student\",\n        children: \"Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"staff\",\n        children: \"Staff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterForm, \"HRM/7WiGQS+buRL0U4qb4GfTy3g=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","preApprovedStaffIDs","RegisterForm","_s","idNumber","setIdNumber","password","setPassword","role","setRole","error","setError","handleRegister","e","preventDefault","includes","response","post","alert","console","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/osheenconstable/dine-campus/src/components/RegisterForm.js"],"sourcesContent":["// src/components/RegisterForm.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './RegisterForm.css';\r\n\r\nconst preApprovedStaffIDs = ['12345', '67890', '11223']; // Example pre-approved staff IDs\r\n\r\nconst RegisterForm = () => {\r\n    const [idNumber, setIdNumber] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [role, setRole] = useState('student'); // default role\r\n    const [error, setError] = useState('');\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validate staff ID\r\n        if (role === 'staff' && !preApprovedStaffIDs.includes(idNumber)) {\r\n            setError('Invalid staff ID.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/auth/register', { idNumber, password, role });\r\n            alert('Registration successful');\r\n            setError('');\r\n        } catch (error) {\r\n            console.error('Registration failed:', error);\r\n            setError('Registration failed. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleRegister}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"ID Number\"\r\n                value={idNumber}\r\n                onChange={(e) => setIdNumber(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n                <option value=\"student\">Student</option>\r\n                <option value=\"staff\">Staff</option>\r\n            </select>\r\n            <button type=\"submit\">Register</button>\r\n            {error && <p>{error}</p>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}